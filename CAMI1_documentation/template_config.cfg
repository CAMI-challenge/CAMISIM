[Main]
# Starting point of the simulation
# 0: Do it all, 1: Only community design, 2: Start with read simulation
phase=0

# Maximum number of available processors
max_processors=1

# ID used in anonymous sequences
dataset_id=template

# Directory where the output will be stored. Folder will be created if it does not exist.
output_directory=

# Directory for temporary data (Example: /tmp)
temp_directory=

# Make perfect assembly based on simulated reads of each sample (True/False)
gsa=

# Make perfect assembly based on simulated reads of all samples (True/False)
pooled_gsa=

# Anonymize all sequences (True/False)
anonymous=

# Compress output data (0-9), with 9 being the strongest compression, but very slow.
compress=

# Seed for the random number generators
seed=

[ReadSimulator]
# Samtools (http://www.htslib.org/) takes care of sam/bam files. Version 1.0 or higher required!
# file path to executable
samtools=

# ART_Illumina (2008-2015) (Weichun Huang at whduke@gmail.com). Version 2.3.6 recommended!
# file path to executable
art_illumina=

# Directory containing error profiles for ART_Illumina
art_error_profiles=

# Supported profiles: "mi": EmpMiSeq250R, "hi": EmpHiSeq2kR, "hi150": HiSeq2500L150R
profile=

# Simulate samples of this size (giga base pairs)
size=

# Read simulator type (only ART is currently supported)
type=art

# Mean size (bp) of fragment simulated by ART (read length depends on error profile)
fragments_size_mean=
# Standard deviation (bp) of fragments simulated by ART
fragment_size_standard_deviation=



[CommunityDesign]
# directory with files of a ncbi taxdump
ncbi_taxdump=~/projects/python/ComunityDesign/unittest_input/ncbi-taxonomy_20150130/

# directory of strain simulation template (optional, required if trains are to be simulated)
# Example dir: MetagenomeSimulationPipeline/scripts/StrainSimulationWrapper/sgEvolver/simulation_dir/
strain_simulation_template=

# how many samples should be simulated?
number_of_samples=

# A sample can be made from several (sub)communities. For example: Eukaryote / Bacteria / Archaea / Virus / Plasmid
# how many (sub)communities are available?
number_of_communities=


[community0]
# Metadata table, required tabseparated columns: genome_ID, OTU, NCBI_ID, novelty_category
metadata=

# File with genome file locations. Format: GENOME_ID \t FILEPATH \n
id_to_genome_file=

# File with genome gen annotation file locations. Format: GENOME_ID \t FILEPATH \n
id_to_gff_file=

# Total number of genomes to be used based on this community
genomes_total=

# Real number of genomes to be drawn from this community, rest will be simulated
genomes_real=

# For more diversity, strains are drawn from the same otu only up to a maximum.
# Maximum is exceeded if no other genomes available.
max_strains_per_otu=

# Base pair ratio between communities.
# If one has a ratio of 1 and the other a ratio of 2, the second will have twice the size
ratio=

# Simulated distribution
# Options: replicates, timeseries_normal, timeseries_lognormal, differential
mode=

# mu of a log distribution
log_mu=
# sigma of a log distribution
log_sigma=

# mu of a gauss distribution
gauss_mu=
# sigma of a gauss distribution
gauss_sigma=
# mu of a log distribution

# View and confirm distribution, requires x-window! (True/False)
view=
